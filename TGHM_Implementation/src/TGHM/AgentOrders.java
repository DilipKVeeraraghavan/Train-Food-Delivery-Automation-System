/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TGHM;

import TGHM.AgentAuth;
import TGHM.Management;
import TGHM.Order;
import TGHM.UnableToConnectException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.naming.AuthenticationException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author THARUN
 */
public class AgentOrders extends javax.swing.JPanel {

    /**
     * Creates new form AgentNotifications
     */
    private AgentAuth aa;
    private ArrayList<Order> orders;
    private void refresh()
    {
        try
        {
            orders = Management.getOrders(aa);
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); 
            model.setRowCount(0);
            for (int i = 0;i<orders.size();i++) {
                Order order = orders.get(i);
                model.addRow(new Object[]{order.getSno(),order.getTrain(),order.getTimeofDelivery(),order.getOrderFoodItems(),order.getCustomer(),order.getStatus()});
            }
            validate();
            repaint();
        } 
        catch (AuthenticationException | UnableToConnectException ex) 
        {
            JOptionPane.showMessageDialog(null,("error : "+ex.getMessage()));;
        }
    }
        
    public AgentOrders(AgentAuth aauth) {
        aa= aauth;
        initComponents();
        try
        {
            orders = Management.getOrders(aauth);
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); 
            for (int i = 0;i<orders.size();i++) {
                Order order = orders.get(i);
                model.addRow(new Object[]{order.getSno(),order.getTrain(),order.getTimeofDelivery(),order.getOrderFoodItems(),order.getCustomer(),order.getStatus()});
            }
            validate();
            repaint();
        } 
        catch (AuthenticationException | UnableToConnectException ex) 
        {
            JOptionPane.showMessageDialog(null,("error : "+ex.getMessage()));;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        snoField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sno", "Train Number", "Time of delivery", "Food Items", "Customer username", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Sno");

        snoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snoFieldActionPerformed(evt);
            }
        });

        jButton1.setText("Accept");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Reject");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Manage Stations");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(29, 29, 29)
                        .addComponent(jButton2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(42, 42, 42)
                        .addComponent(snoField, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(65, 65, 65))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(snoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(153, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void snoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_snoFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int err = 0;
        try
        {
            Integer.parseInt(snoField.getText());
        }
        catch(Exception e)
        {
            err = 1;
            JOptionPane.showMessageDialog(null, "invalid sno");
        }
        if(err == 0)
        {
            try
            {
                Management.AcceptOrder(Integer.parseInt(snoField.getText()), aa);
                refresh();
                JOptionPane.showMessageDialog(null, "Done");
            } 
            catch (IllegalArgumentException | AuthenticationException | UnableToConnectException ex) 
            {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int err = 0;
        try
        {
            Integer.parseInt(snoField.getText());
        }
        catch(Exception e)
        {
            err = 1;
            JOptionPane.showMessageDialog(null, "invalid sno");
        }
        if(err == 0)
        {
            try
            {
                Management.RejectOrder(Integer.parseInt(snoField.getText()), aa);
                refresh();
                JOptionPane.showMessageDialog(null, "Done");
            } 
            catch (IllegalArgumentException | AuthenticationException | UnableToConnectException ex) 
            {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        javax.swing.JFrame frame = new AgentManageStations(aa);
        frame.setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE);
        frame.setSize(600,600);
        frame.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField snoField;
    // End of variables declaration//GEN-END:variables
}
